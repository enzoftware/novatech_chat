rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read other users' basic info (for chat list)
      allow read: if isAuthenticated();
      // Allow users to modify only their own data
      allow write: if isOwner(userId);
    }

    // Chats collection rules
    match /chats/{chatId} {
      // Helper function to check if user is a chat participant
      function isParticipant() {
        return isAuthenticated() && 
               request.auth.uid in resource.data.participants;
      }

      // Helper function to validate chat document creation
      function isValidNewChat() {
        return request.resource.data.keys().hasAll(['participants', 'createdAt', 'lastMessage', 'lastTimestamp', 'lastSenderId']) &&
               request.auth.uid in request.resource.data.participants;
      }

      // Allow create if user is authenticated and includes themselves as participant
      allow create: if isAuthenticated() && isValidNewChat();
      // Allow read/update/delete if user is a participant
      allow read, update, delete: if isParticipant();

      // Messages subcollection rules
      match /messages/{messageId} {
        // Helper function to check if user is a chat participant for messages
        function isMessageParticipant() {
          let chatData = get(/databases/$(database)/documents/chats/$(chatId)).data;
          return isAuthenticated() && request.auth.uid in chatData.participants;
        }

        // Allow participants to read messages
        allow read: if isMessageParticipant();
        
        // Allow participants to create messages with valid data
        allow create: if isMessageParticipant() && 
                     request.resource.data.keys().hasAll(['senderId', 'text', 'timestamp', 'read']) &&
                     request.auth.uid == request.resource.data.senderId;
                     
        // Only allow message authors to modify or delete their messages
        allow update, delete: if isAuthenticated() && 
                             resource != null &&
                             request.auth.uid == resource.data.senderId;
      }
    }
  }
}
